Algorithm- set of steps or instructions for completing a task

Requirements:
1) clearly defined problem, input and output
2) steps need to be in a specific order
3) steps need to be distinct
4) algorithm should produce a result
5) algorithm should complete in a finite amount of time

Time complexity- measure of how long it takes the algorithm to run
Space complexity- measure of the amount of memory taken up by the computer to run the algorithm
Big O- Theoretical definition of the complexity of an algorithm as a function of the size
It measures the "upper bounds" or worst case senario of the algorithm 

Runtime from best to worst
O(1)- constant time (least complex best case senario)
O(log n) or O(ln n)- logarithmic runtime/ sublinear runtime (ex: binary search)
O(n)- linear runtime (ex: linear search)
O(n log n)- quasilinear runtime (ex: merge sort) 
O(n^2)- qaudratic runtime, not every efficient (ex: nested iteration(loop inside a loop))